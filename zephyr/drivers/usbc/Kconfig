# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

if PLATFORM_EC_USBC

module = USBC
module-str = usbc
source "subsys/logging/Kconfig.template.log_config"

config USBC_INTEL_ALTMODE
	bool "USB-C Intel alternate mode configuration driver"
	default y if DT_HAS_INTEL_PD_ALTMODE_ENABLED
	help
	  This option enables a driver for communicating between the USB PD
	  chip and EC for configuring the USB-C alternate mode muxes inside
	  Intel AP.

config USBC_PDC_CCG8
	bool "Infineon CCG8 Power Delivery Controller driver"
	default y if DT_HAS_INFINEON_CCG8_ENABLED
	help
	  This option enable the Infineon CCG8 Power Delivery Controller. This
	  chip family supports both single port and multiple port
	  configurations. For multiple port configurations, each port must
	  create a separate devicetree entry.

config CONSOLE_CMD_PDC_CCG8
	bool "Console command: CCG8 read/write"
	default y if USBC_PDC_CCG8
	help
	  Enable console command to read/write to the power path registers of
	  CCG8 Power Delivery chip.

config USBC_PDC_TPS6699X
	bool "TI TPS6699X Power Deleivery Controller driver"
	default y if DT_HAS_TI_TPS6699_PDC_ENABLED
	select SMF
	select SMF_ANCESTOR_SUPPORT
	help
	  This option enables the TI TPS6699X Power Delivery Controller.

config USBC_PDC_TPS6699X_STACK_SIZE
	int "USB-C TI TPS6699X PDC thread stack size"
	default 1024
	depends on USBC_PDC_TPS6699X
	help
	  Stack size of thread created for each instance.

config USBC_PDC_TPS6699X_THREAD_PRIORITY
	int "USB-C TI TPS6699x PDC thread priority"
	default 0
	depends on USBC_PDC_TPS6699X
	help
	  Set thread priority of the USB-C PDC

config USBC_PDC_TPS6699X_FW_UPDATER
	bool "USB-C TI TPS6699x PDC FW update support"
	depends on USBC_PDC_TPS6699X
	help
	  If enabled, bundle a TI FW binary blob into the EC image and add code
	  to perform an EC-based firmware update of the PDC for development
	  purposes. Enables the `pdc fwupdate` console command.

config USBC_PDC_RTS54XX
	bool "Realtek RTS545x Power Delivery Controller driver"
	default y if DT_HAS_REALTEK_RTS54_PDC_ENABLED
	select SMF
	select SMF_ANCESTOR_SUPPORT
	help
	  This option enables the Realtek RTS545x Power Delivery Controller.

config USBC_PDC_RTS54XX_STACK_SIZE
        int "USB-C Realtek RTS545x PDC thread stack size"
        default 1024
	depends on USBC_PDC_RTS54XX
        help
          Stack size of thread created for each instance.

config USBC_PDC_RTS54XX_THREAD_PRIORITY
        int "USB-C Realtek RTS545x PDC thread priority"
        default 0
	depends on USBC_PDC_RTS54XX
        help
          Set thread priority of the USB-C PDC

config USBC_PDC_TRACE_MSG
	bool "USB-C PDC message tracing"
	depends on USBC_PDC_RTS54XX
	help
	  Enable communication tracing between the EC and the PDC.
	  Messages between the EC and PDC are saved in a pre-allocated
	  FIFO so they can be retrieved by EC host and console commands.

rsource "Kconfig.pdc_trace"

endif # PLATFORM_EC_USBC
