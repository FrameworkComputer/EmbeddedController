# Copyright 2021 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description: LED policy parent node

compatible: "cros-ec,led-policy"

properties:
  sysrq-alias:
    description: |
      This property is for making another existing led behaves as the
      EC_LED_ID_SYSRQ_DEBUG_LED when any call to `led_control` on the
      SYSRQ_DEBUG_LED.
    type: string
    default: EC_LED_ID_SYSRQ_DEBUG_LED
    enum: &led-id-enum
      - EC_LED_ID_BATTERY_LED
      - EC_LED_ID_POWER_LED
      - EC_LED_ID_ADAPTER_LED
      - EC_LED_ID_LEFT_LED
      - EC_LED_ID_RIGHT_LED
      - EC_LED_ID_RECOVERY_HW_REINIT_LED
      - EC_LED_ID_SYSRQ_DEBUG_LED
  sysrq-led-control-color:
    description: |
      Specify what color to display when `led_control` makes the LED
      EC_LED_ID_SYSRQ_DEBUG_LED active.
    type: string
    default: LED_BLUE
    enum: &led-color-enum
      - LED_OFF
      - LED_RED
      - LED_GREEN
      - LED_BLUE
      - LED_YELLOW
      - LED_WHITE
      - LED_AMBER
  recovery-hw-reinit-alias:
    description: |
      This property is for making another existing led behaves as the
      EC_LED_ID_RECOVERY_HW_REINIT_LED when any call to `led_control` on the
      RECOVERY_HW_REINIT_LED.
    type: string
    default: EC_LED_ID_RECOVERY_HW_REINIT_LED
    enum: *led-id-enum
  recovery-hw-reinit-led-control-color:
    description: |
      Specify what color to display when `led_control` makes the LED
      EC_LED_ID_RECOVERY_HW_REINIT_LED active.
    type: string
    default: LED_BLUE
    enum: *led-color-enum

child-binding:
  description: |
    LED policy nodes to describe the policy combination a node depends on, and
    the color to set to for that combination.
    e.g. If Blue color needs to be set for charge state discharge in S0, a
    node looks like
    power-state-discharge-s0 {
       charge-state = "LED_PWRS_DISCHARGE";
       chipset-state = "POWER_S0";
       charge-port = <0>;
       led-0 {
         led-id = "EC_LED_ID_BATTERY_LED";
         color-0 {
           led-color = "LED_BLUE";
         };
       };
    };

  properties:
    charge-state:
      description: |
        If the LED color depends on charge state, this property is used
        to describe it.
        LED_PWRS_CHARGE - AC is connected, battery is charging.
        LED_PWRS_DISCHARGE - AC is not connected, battery is discharging.
        LED_PWRS_ERROR - Battery is in error state.
        LED_PWRS_IDLE - AC is connected, battery is not charging.
        LED_PWRS_FORCED_IDLE - AC is connected, battery is not charging.
                                Used during factory testing.
        LED_PWRS_CHARGE_NEAR_FULL - AC is connected, battery is charging
                                     and close to fully charged.
      type: string
      enum:
        - LED_PWRS_CHARGE
        - LED_PWRS_DISCHARGE
        - LED_PWRS_ERROR
        - LED_PWRS_IDLE
        - LED_PWRS_FORCED_IDLE
        - LED_PWRS_CHARGE_NEAR_FULL

    charge-port:
      description: |
        If the LED color depends on the charging port (left or right).
      type: int

    chipset-state:
      description: |
        If the LED color depends on chipset state, this property is used
        to describe it.
      type: string
      enum:
        - POWER_S0
        - POWER_S3
        - POWER_S5

    batt-state-mask:
      description: |
        If the LED color depends on battery state, this property is used
        to describe the kind of battery state.
        Use the macros defined in dt-bindings/battery.h.
        e.g. SB_STATUS_DISCHARGING - Battery is discharging.
      type: int

    batt-state:
      description: |
        If the LED color depends on battery state, this property is used
        to select the battery state value base on batt-state-mask.
      type: int

    batt-lvl:
      description: |
        If the LED color depends on current battery level, this property
        is used to describe batt_lvl range using closed interval [x,y].
        Use the macros defined in dt-bindings/battery.h.
        e.g. <BATTERY_LEVEL_EMPTY BATTERY_LEVEL_LOW> describes battery level
             range of BATTERY_LEVEL_EMPTY to BATTERY_LEVEL_LOW inclusive.
      type: array

  child-binding:
    properties:
      led-id:
        description: |
          This property is the same as the one required by the
          EC_CMD_LED_CONTROL host command.
          It must match the enum names defined in ec_commands.h.
        type: string
        required: true
        enum: *led-id-enum
      transition:
        description: |
          This property describes the type of transition this LED will use
          to transition from one color to the next.
        type: string
        enum:
          - LED_TRANSITION_STEP
          - LED_TRANSITION_LINEAR
          - LED_TRANSITION_EXPONENTIAL
    child-binding:
      properties:
        led-color:
          description: |
            The color to be set for this LED. Must be one of the colors defined
            for this LED in led_pins.dts or pwm_pins.dts.
          type: string
          required: true
          enum: *led-color-enum
        period-ms:
          description: |
            In case of blinking LEDs, amount of time in msecs the LED
            color is active. This value must be a multiple of
            HOOK_TICK_INTERVAL_MS.
            e.g.
            power-state-error {
               charge-state = "LED_PWRS_ERROR";
               led-0 {
                 led-node = "EC_LED_ID_BATTERY_LED";
                 /* One sec Amber, one sec Off */
                 color-0 {
                   led-color = "LED_AMBER";
                   period-ms = <1000>;
                 };
                 color-1 {
                   led-color = "LED_OFF";
                   period-ms = <1000>;
                 };
               };
            };
          type: int
