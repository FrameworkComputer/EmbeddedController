/* Copyright 2023 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 *
 */

/ {
	aliases {
		gpio-cbi-wp = &gpio_ec_cbi_wp;
		gpio-wp = &gpio_ec_flash_wp_odl;
		gpio-kbd-kso2 = &gpio_ec_kso_02_inv;
	};

	rauru-fw-config {
		compatible = "cros-ec,cbi-fw-config";

		hdmi {
			enum-name = "FW_HDMI";
			start = <13>;
			size = <1>;
			hdmi-not-present {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_HDMI_NOT_PRESENT";
				value = <0>;
			};
			hdmi-present {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_HDMI_PRESENT";
				value = <1>;
				default;
			};
		};
		fingerprint {
			enum-name = "FW_FINGERPRINT";
			start = <14>;
			size = <2>;

			fp-disabled {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FP_DISABLED";
				value = <0>;
				default;
			};
			fp-helipilot {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FP_HELIPILOT";
				value = <1>;
			};
		};
		form-factor {
			enum-name = "FW_FORM_FACTOR";
			start = <16>;
			size = <2>;
			clamshell {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FORM_FACTOR_CLAMSHELL";
				value = <0>;
			};
			convertible {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FORM_FACTOR_CONVERTIBLE";
				value = <1>;
			};
			detchable {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FORM_FACTOR_DETACHABLE";
				value = <2>;
				default;
			};
			chromebox {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FORM_FACTOR_CHROMEBOX";
				value = <3>;
			};
		};
		panel {
			enum-name = "FW_PANEL";
			start = <18>;
			size = <5>;
			default-panel {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_PANEL_DEFAULT";
				value = <0>;
				default;
			};
			old {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_PANEL_OLD";
				value = <1>;
			};
		};
		fan {
			enum-name = "FW_FAN";
			start = <23>;
			size = <1>;

			no-fan {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FAN_NOT_PRESENT";
				value = <0>;
			};
			fan-present {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_FAN_PRESENT";
				value = <1>;
				/*
				 * Set as default so that unprovisioned
				 * configs will run the fan regardless.
				 */
				default;
			};
		};
		usb-combo {
			enum-name = "FW_USB_COMBO";
			start = <24>;
			size = <2>;

			usb-combo-a-c {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_USB_A_C";
				value = <0>;
			};

			usb-combo-a {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_USB_A";
				value = <1>;
				default;
			};
			usb-combo-c {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_USB_C";
				value = <2>;
			};
			usb-combo-none {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_USB_NONE";
				value = <3>;
			};
		};
		sub-board {
			enum-name = "FW_SUB_BOARD";
			start = <26>;
			size = <2>;

			sub-board-none {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_SB_NONE";
				value = <0>;
			};

			sub-board-redriver-tusb1046-ps8761 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_SB_REDRIVER";
				value = <1>;
				default;
			};
			sub-board-retimer-anx3443-ps8811 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_SB_RETIMER";
				value = <2>;
			};
		};
		amp {
			enum-name = "FW_AMP";
			start = <28>;
			size = <2>;
		};
		storage {
			enum-name = "FW_STORAGE";
			start = <30>;
			size = <2>;
			ufs-40 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_STORAGE_UFS_40";
				value = <0>;
			};
			ufs-31 {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_STORAGE_UFS_31";
				value = <1>;
			};
			ufs-40-hs-lss {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_STORAGE_UFS_40_HS_LSS";
				value = <2>;
			};
			nvme {
				compatible = "cros-ec,cbi-fw-config-value";
				enum-name = "FW_STORAGE_NVME";
				value = <3>;
			};
		};
	};

	named-adc-channels {
		adc_ec_usb_c0_vbus_sense: ec_usb_c0_vbus_sense {
			mul = <10>;
		};
		adc_ec_usb_c1_vbus_sense: ec_usb_c1_vbus_sense {
			mul = <10>;
		};
	};

	named-i2c-ports {
		ec_i2c_usb_c0_scl_3v3 {
			i2c-port = <&i2c2ALT>;
			remote-port = <8>;
		};
		ec_smb_batt_scl_3v3 {
			remote-port = <7>;
		};

		/delete-node/ ec_i2c5;
	};

	named-gpios {
		/* unimplemented GPIOs */
		entering_rw: entering_rw {
			enum-name = "GPIO_ENTERING_RW";
		};
		/* default output level */
		gpio_ec_kso_02_inv: ec_kso_02_inv {
			gpios = <&gpioksol 2 GPIO_OUTPUT_HIGH>;
		};
		/* a label to prevent build break in power sequencing */
		en_pp4200_s5: en_pp3700_s5 {
			gpios = <&gpioh 5 (GPIO_OUTPUT_LOW)>;
		};
		/* Arbitrage doesn't support INPUT | ACTIVE_LOW gpios */
		als_int_ec_odl {
			gpios = <&gpiob 6 (GPIO_INPUT | GPIO_VOLTAGE_1P8 |
					   GPIO_ACTIVE_LOW)>;
		};
		ap_ec_sysrst_odl {
			gpios = <&gpioj 2 (GPIO_INPUT | GPIO_VOLTAGE_1P8 |
					   GPIO_ACTIVE_LOW)>;
		};
		ap_ec_wdtrst_l {
			gpios = <&gpioj 3 (GPIO_INPUT | GPIO_VOLTAGE_1P8 |
					   GPIO_ACTIVE_LOW)>;
		};
		ap_in_sleep_l {
			gpios = <&gpiom 2 (GPIO_INPUT | GPIO_VOLTAGE_1P8 |
					   GPIO_ACTIVE_LOW)>;
		};
		charger_prochot_odl {
			gpios = <&gpioc 0 (GPIO_INPUT | GPIO_ACTIVE_LOW)>;
		};
		pmic_ec_resetb {
			gpios = <&gpioj 1 (GPIO_INPUT | GPIO_VOLTAGE_1P8 |
					   GPIO_ACTIVE_LOW)>;
		};
		ec_flash_wp_odl {
			gpios = <&gpioc 4 (GPIO_INPUT | GPIO_ACTIVE_LOW)>;
		};
		gpio_ap_xhci_init_done_r: ap_xhci_init_done_r {
			gpios = <&gpioj 4 (GPIO_INPUT | GPIO_VOLTAGE_1P8)>;
		};
		/* Adapt generated nodelabel to the current nodelabel. */
		gpio_ec_pmic_en_odl: ec_pmic_en_odl_r {
		};
		gpio_ap_xhci_init_done: ap_xhci_init_done_r {
		};
	};

	hibernate-wake-pins {
		compatible = "cros-ec,hibernate-wake-pins";
		wakeup-irqs = <
			&int_ac_present
			&int_power_button
			&int_lid_open
		>;
	};

	unused-pins {
		compatible = "unused-gpios";

		unused-gpios =
			/* i2c5_scl */
			<&gpioa 4 GPIO_INPUT>,
			/* i2c5_sda */
			<&gpioa 5 GPIO_INPUT>;
	};
};

&pinctrl {
	/* I2C property setting */
	i2c0_clk_gpb3_default: i2c0_clk_gpb3_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c0_data_gpb4_default: i2c0_data_gpb4_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c1_clk_gpc1_default: i2c1_clk_gpc1_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c1_data_gpc2_default: i2c1_data_gpc2_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c2_clk_gpf6_default: i2c2_clk_gpf6_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c2_data_gpf7_default: i2c2_data_gpf7_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c3_clk_gpb2_default: i2c3_clk_gpb2_default {
		gpio-voltage = "1v8";
		drive-strength = "low";
	};
	i2c3_data_gpb5_default: i2c3_data_gpb5_default {
		gpio-voltage = "1v8";
		drive-strength = "low";
	};
	i2c3_clk_gpb2_sleep: i2c3_clk_gpb2_sleep {
		pinmuxs = <&pinctrlb 2 IT8XXX2_ALT_DEFAULT>;
		gpio-voltage = "1v8";
	};
	i2c3_data_gpb5_sleep: i2c3_data_gpb5_sleep {
		pinmuxs = <&pinctrlb 5 IT8XXX2_ALT_DEFAULT>;
		gpio-voltage = "1v8";
	};
	i2c4_clk_gpe0_default: i2c4_clk_gpe0_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c4_data_gpe7_default: i2c4_data_gpe7_default {
		gpio-voltage = "3v3";
		drive-strength = "low";
	};
	i2c5_clk_gpa4_default: i2c5_clk_gpa4_default {
		gpio-voltage = "3v3";
	};
	i2c5_data_gpa5_default: i2c5_data_gpa5_default {
		gpio-voltage = "3v3";
	};
};

&i2c0 {
	label = "I2C_PWR_CBI";
	prescale-scl-low = <8>;
	clock-frequency = <I2C_BITRATE_FAST>;
};

&i2c1 {
	label = "I2C_BATTERY";
	/* Only i2c1 uses 100kHz SMBus which needs data-hold-time */
	data-hold-time = <10>;
	prescale-scl-low = <8>;
	clock-frequency = <100000>;
};

&i2c2 {
	label = "I2C_USB_C0";
	prescale-scl-low = <8>;
	clock-frequency = <I2C_BITRATE_FAST>;
};

&i2c3 {
	label = "I2C_SENSOR";
	clock-frequency = <I2C_BITRATE_FAST>;
	scl-gpios = <&gpiob 2 0>;
	sda-gpios = <&gpiob 5 0>;
	pinctrl-1 = <&i2c3_clk_gpb2_sleep
			&i2c3_data_gpb5_sleep>;
	pinctrl-names = "default", "sleep";
	prescale-scl-low = <8>;
};

&i2c4 {
	label = "I2C_USB_C1";
	clock-frequency = <I2C_BITRATE_FAST>;
	prescale-scl-low = <8>;
};

&i2c5ALT {
	status = "disabled";
};

&pwm2 {
	prescaler-cx = <PWM_PRESCALER_C4>;
};

&pwm3 {
	prescaler-cx = <PWM_PRESCALER_C4>;
};

&sha0 {
	status = "okay";
};
