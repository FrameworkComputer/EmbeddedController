/* Copyright 2022 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

 #include <dt-bindings/usb_pd_tcpm.h>

/ {
	chosen {
		cros,rtc = &mtc;
	};

	hibernate-wake-pins {
		compatible = "cros-ec,hibernate-wake-pins";
		wakeup-irqs = <
			&int_ac_present
			&int_lid_open
			&int_power_button
		>;
	};

	named-i2c-ports {
		compatible = "named-i2c-ports";

		i2c_charger: charger {
			i2c-port = <&i2c7_0>;
			enum-names = "I2C_PORT_CHARGER",
				"I2C_PORT_BATTERY",
				"I2C_PORT_EEPROM",
				"I2C_PORT_KB_DISCRETE",
				"I2C_PORT_PORT80";
		};
		typec_aic1: typec-aic1{
			i2c-port = <&i2c0_0>;
			enum-names = "I2C_PORT_TYPEC_AIC_1";
		};
		typec_aic2: typec-aic2{
			i2c-port = <&i2c1_0>;
			enum-names = "I2C_PORT_TYPEC_AIC_2";
		};
	};

	named-adc-channels {
		compatible = "named-adc-channels";

		adc_ambient: ambient {
			enum-name = "ADC_TEMP_SENSOR_1";
			io-channels = <&adc0 3>;
		};
		adc_ddr: ddr {
			enum-name = "ADC_TEMP_SENSOR_2";
			io-channels = <&adc0 4>;
		};
		adc_skin: skin {
			enum-name = "ADC_TEMP_SENSOR_3";
			io-channels = <&adc0 2>;
		};
		adc_vr: vr {
			enum-name = "ADC_TEMP_SENSOR_4";
			io-channels = <&adc0 1>;
		};
	};
};

/* charger */
&i2c7_0 {
	label = "I2C_CHARGER";
	status = "okay";
	clock-frequency = <I2C_BITRATE_STANDARD>;
	pinctrl-0 = <&i2c7_0_sda_scl_gpb2_b3>;
	pinctrl-names = "default";

	pca95xx: pca95xx@22 {
		compatible = "nxp,pca95xx";
		label = "PCA95XX";
		reg = <0x22>;
		gpio-controller;
		#gpio-cells = <2>;
		ngpios = <16>;
	};

	rvp_board_id: rvp-board-id {
		compatible = "intel,rvp-board-id";

		/*
		 * BOM ID [2]   : IOEX[0]
		 * BOM ID [1:0] : IOEX[15:14]
		 */
		bom-gpios = <&pca95xx 0 0>, <&pca95xx 15 0>, <&pca95xx 14 0>;

		/*
		 * FAB ID [1:0] : IOEX[2:1]
		 */
		fab-gpios = <&pca95xx 2 0>, <&pca95xx 1 0>;

		/*
		 * BOARD ID[5:0] : IOEX[13:8]
		 */
		board-gpios = <&pca95xx 13 0>, <&pca95xx 12 0>, <&pca95xx 11 0>,
			      <&pca95xx 10 0>, <&pca95xx 9 0>, <&pca95xx 8 0>;
	};

	kb_discrete: ite-it8801@39 {
		compatible = "ite,it8801";
		reg = <0x39>;
	};

	seven_seg_display: max695x-seven-seg-display@38 {
		compatible = "maxim,seven-seg-display";
		reg = <0x38>;
		label = "MAX695X_SEVEN_SEG_DISPLAY";
	};

	charger: isl9241@9 {
		compatible = "intersil,isl9241";
		status = "okay";
		reg = <0x9>;
	};

	cbi_eeprom: eeprom@50 {
		compatible = "atmel,at24";
		reg = <0x50>;
		size = <2048>;
		pagesize = <16>;
		address-width = <8>;
		timeout = <5>;
	};
};

/* host interface */
&espi0 {
	status = "okay";
	pinctrl-0 = <&espi_lpc_gp46_47_51_52_53_54_55_57>;
	pinctrl-names = "default";
};

&i2c_ctrl7 {
	status = "okay";
};

/* typec_aic1 */
&i2c0_0 {
	label = "I2C_USB_C0_C1_TCPC";
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
	pinctrl-0 = <&i2c0_0_sda_scl_gpb4_b5>;
	pinctrl-names = "default";

	tcpc_port0: nct38xx@73 {
		compatible = "nuvoton,nct38xx";
		reg = <0x73>;
		gpio-dev = <&nct38xx_c0>;
		tcpc-flags = <(
			TCPC_FLAGS_TCPCI_REV2_0 |
			TCPC_FLAGS_NO_DEBUG_ACC_CONTROL)>;
	};

	nct38xx_c0: nct38xx_c0@73 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "nuvoton,nct38xx-gpio";
		reg = <0x73>;
		label = "NCT38XX_C0";

		ioex_c0:gpio@0 {
			compatible = "nuvoton,nct38xx-gpio-port";
			reg = <0x0>;
			label = "NCT38XX_C0_GPIO0";
			gpio-controller;
			#gpio-cells = <2>;
			ngpios = <8>;
			pin_mask = <0xdc>;
			pinmux_mask = <0xff>;
		};
	};

	tcpc_port1: nct38xx@77 {
		compatible = "nuvoton,nct38xx";
		reg = <0x77>;
		gpio-dev = <&nct38xx_c1>;
		tcpc-flags = <(TCPC_FLAGS_TCPCI_REV2_0)>;
	};

	nct38xx_c1: nct38xx_c1@77 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "nuvoton,nct38xx-gpio";
		reg = <0x77>;
		label = "NCT38XX_C1";

		ioex_c1:gpio@0 {
			compatible = "nuvoton,nct38xx-gpio-port";
			reg = <0x0>;
			label = "NCT38XX_C1_GPIO0";
			gpio-controller;
			#gpio-cells = <2>;
			ngpios = <8>;
			pin_mask = <0xdc>;
			pinmux_mask = <0xff>;
		};
	};

	nct38xx_alert_0 {
		compatible = "nuvoton,nct38xx-gpio-alert";
		irq-gpios = <&gpio4 0 GPIO_ACTIVE_LOW>;
		nct38xx-dev = <&nct38xx_c0 &nct38xx_c1>;
		label = "NCT38XX_ALERT_1";
	};

	usb_c0_hb_retimer: jhl8040r-c0@56 {
		compatible = "intel,jhl8040r";
		reg = <0x56>;
		reset-pin = <&usb_c0_hb_retimer_rst>;
		ls-en-pin = <&usb_c0_hb_retimer_ls_en>;
	};

	usb_c1_hb_retimer: jhl8040r-c1@57 {
		compatible = "intel,jhl8040r";
		reg = <0x57>;
		reset-pin = <&usb_c1_hb_retimer_rst>;
		ls-en-pin = <&usb_c1_hb_retimer_ls_en>;
	};
};

&i2c_ctrl0 {
	status = "okay";
};

/* typec_aic2 */
&i2c1_0 {
	label = "I2C_USB_C2_C3_TCPC";
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
	pinctrl-0 = <&i2c1_0_sda_scl_gp87_90>;
	pinctrl-names = "default";

	tcpc_port2: ccgxxf@b {
		compatible = "cypress,ccgxxf";
		reg = <0xb>;
	};

	tcpc_port3: ccgxxf@1b {
		compatible = "cypress,ccgxxf";
		reg = <0x1b>;
	};

	usb_c2_hb_retimer: jhl8040r-c2@58 {
		compatible = "intel,jhl8040r";
		reg = <0x58>;
		reset-pin = <&usb_c2_hb_retimer_rst>;
		ls-en-pin = <&usb_c2_hb_retimer_ls_en>;
	};

	usb_c3_hb_retimer: jhl8040r-c3@59 {
		compatible = "intel,jhl8040r";
		reg = <0x59>;
		reset-pin = <&usb_c3_hb_retimer_rst>;
		ls-en-pin = <&usb_c3_hb_retimer_ls_en>;
	};
};

&i2c_ctrl1 {
	status = "okay";
};

&adc0 {
	status = "okay";
	pinctrl-0 = <&adc0_chan1_gp44
		     &adc0_chan2_gp43
		     &adc0_chan3_gp42
		     &adc0_chan4_gp41>;
	pinctrl-names = "default";
};
