/* Copyright 2024 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 *
 * Device tree for a generic Nissa device based on a NPCX EC, suitable for board
 * unit tests.
 */
#include <npcx_emul.dts>

#include "../program/nissa/cbi.dtsi"
#include "../program/nissa/pujjoga/motionsense.dtsi"

/ {
	aliases {
		/* type-A */
		gpio-en-usb-a1-vbus = &gpio_en_sub_usb_a1_vbus;
		/* HDMI */
		gpio-hdmi-en-odl = &gpio_ec_hdmi_pwr;

		gpio-wp = &gpio_ec_wp_odl;
	};

	named-gpios {
		compatible = "named-gpios";

		gpio_ec_soc_dsw_pwrok: ec_soc_dsw_pwrok {
			gpios = <&gpio6 1 GPIO_OUTPUT>;
		};

		gpio_ec_soc_hdmi_hpd: ec_soc_hdmi_hpd {
			gpios = <&gpioe 4 GPIO_OUTPUT>;
		};

		gpio_ec_wp_odl: ec_wp_odl {
			gpios = <&gpioa 1 (GPIO_INPUT | GPIO_ACTIVE_LOW)>;
		};

		entering_rw {
			gpios = <&gpio0 3 GPIO_OUTPUT>;
			enum-name = "GPIO_ENTERING_RW";
		};

		gpio_en_pp5000_pen_x: en_pp5000_pen_x {
			gpios = <&gpioe 2 GPIO_OUTPUT>;
		};

		gpio_en_sub_usb_a1_vbus: en_sub_usb_a1_vbus {
			gpios = <&gpiod 4 GPIO_OUTPUT>;
		};

		gpio_ec_hdmi_pwr: ec_hdmi_pwr {
			gpios = <&gpio3 3 GPIO_OUTPUT>;
		};

		gpio_usb_c0_ppc_int_odl: usb_c0_ppc_int_odl {
			gpios = <&gpio0 5 (GPIO_INPUT | GPIO_ACTIVE_LOW)>;
			enum-name = "GPIO_USB_C0_PPC_INT_ODL";
		};

		gpio_usb_c1_ppc_int_odl: usb_c1_ppc_int_odl {
			gpios = <&gpio0 6 (GPIO_INPUT | GPIO_ACTIVE_LOW)>;
			enum-name = "GPIO_USB_C1_PPC_INT_ODL";
		};

		gpio_imu_int_l: imu_int_l {
			gpios = <&gpio5 6 GPIO_INPUT>;
		};

		gpio_lid_open: lid_open {
			gpios = <&gpiod 2 GPIO_INPUT>;
			enum-name = "GPIO_LID_OPEN";
		};

		gpio_tablet_mode_l: tablet_mode_l {
			gpios = <&gpio9 5 GPIO_INPUT>;
			enum-name = "GPIO_TABLET_MODE_L";
		};

		acok_od: acok_od {
			gpios = <&gpio0 4 GPIO_INPUT>;
			enum-name = "GPIO_AC_PRESENT";
		};

		gpio_usb_c0_c1_tcpc_int_odl: usb_c0_c1_tcpc_int_odl {
			gpios = <&gpiob 7 (GPIO_INPUT | GPIO_ACTIVE_LOW)>;
			enum-name = "GPIO_USB_C0_C1_TCPC_INT_ODL";
		};

		gpio_usb_c0_c1_tcpc_rst_odl: usb_c0_c1_tcpc_rst_l {
			gpios = <&gpio7 3 (GPIO_ODR_HIGH | GPIO_ACTIVE_LOW)>;
			enum-name = "GPIO_USB_C0_C1_TCPC_RST_ODL";
		};

		gpio_power_led: power_led {
			gpios = <&gpioc 2 GPIO_OUTPUT_LOW>;
		};

		gpio_led_1_odl: led_1_odl {
			gpios = <&gpioc 4 GPIO_OUTPUT_LOW>;
		};

		gpio_led_2_odl: led_2_odl {
			gpios = <&gpioc 3 GPIO_OUTPUT_LOW>;
		};

		ioex_usb_c0_frs_en: usb_c0_frs_en {
			gpios = <&ioex_port1 6 GPIO_OUTPUT_LOW>;
			enum-name = "GPIO_USB_C0_FRS_EN";
		};

		ioex_usb_c1_frs_en: usb_c1_frs_en {
			gpios = <&ioex_port2 6 GPIO_OUTPUT_LOW>;
			enum-name = "GPIO_USB_C1_FRS_EN";
		};
	};

	gpio-interrupts {
		compatible = "cros-ec,gpio-interrupts";

		int_imu: ec_imu {
			irq-pin = <&gpio_imu_int_l>;
			flags = <GPIO_INT_EDGE_FALLING>;
			handler = "lsm6dsm_interrupt";
		};
	};

	named-i2c-ports {
		compatible = "named-i2c-ports";
		i2c_ec_i2c_batt: ec_i2c_batt {
			i2c-port = <&i2c_ctrl7>;
			enum-names = "I2C_PORT_BATTERY";
		};
		i2c_ec_i2c_usb_c0: ec_i2c_usb_c0 {
			i2c-port = <&i2c0>;
			enum-names = "I2C_PORT_USB_C0_TCPC";
		};
		i2c_ec_i2c_sub_usb_c1: ec_i2c_sub_usb_c1 {
			i2c-port = <&i2c0>;
			enum-names = "I2C_PORT_USB_C1_TCPC";
		};
		i2c_ec_i2c_sensor: ec_i2c_sensor {
			i2c-port = <&i2c_ctrl1>;
			enum-names = "I2C_PORT_SENSOR";
		};
	};

	ioex_port1: gpio@1100 {
		status = "okay";
		compatible = "zephyr,gpio-emul";
		reg = <0x1100 0x4>;
		rising-edge;
		falling-edge;
		high-level;
		low-level;
		gpio-controller;
		#gpio-cells = <2>;
		ngpios = <8>;
	};

	ioex_port2: gpio@1200 {
		status = "okay";
		compatible = "zephyr,gpio-emul";
		reg = <0x1200 0x4>;
		rising-edge;
		falling-edge;
		high-level;
		low-level;
		gpio-controller;
		#gpio-cells = <2>;
		ngpios = <8>;
	};

	usba {
		compatible = "cros-ec,usba-port-enable-pins";
		enable-pins = <&gpio_en_sub_usb_a1_vbus>;
		status = "okay";
	};

	usbc {
		#address-cells = <1>;
		#size-cells = <0>;

		port0@0 {
			compatible = "named-usbc-port";
			reg = <0>;
			tcpc = <&tcpc_port0>;
			usb-mux-chain-0 {
				compatible = "cros-ec,usb-mux-chain";
				usb-muxes = <&virtual_mux_0>;
			};
		};
		port0-muxes {
			virtual_mux_0: virtual-mux-0 {
				compatible = "cros-ec,usbc-mux-virtual";
			};
		};
		/*
		 * TODO(b:211693800): port1 may not be present on some
		 * sub-boards.
		 */
		port1@1 {
			compatible = "named-usbc-port";
			reg = <1>;
			tcpc = <&tcpc_port1>;
			usb-mux-chain-1 {
				compatible = "cros-ec,usb-mux-chain";
				usb-muxes = <&virtual_mux_1>;
			};
		};
		port1-muxes {
			virtual_mux_1: virtual-mux-1 {
				compatible = "cros-ec,usbc-mux-virtual";
			};
		};
	};
};

&i2c0 {
	status = "okay";

	tcpci_emul0: tcpci_emul@83 {
		compatible = "cros,tcpci-generic-emul";
		status = "okay";
		reg = <0x83>;
	};

	tcpci_emul1: tcpci_emul@82 {
		compatible = "cros,tcpci-generic-emul";
		status = "okay";
		reg = <0x82>;
	};

	nct38xx@70 {
		compatible = "nuvoton,nct38xx";
		reg = <0x70>;
		tcpc_port0: nct38xx-tcpc {
			compatible = "cros,nct38xx-emul",
				"nuvoton,nct38xx-tcpc";
			rst-gpios = <&gpio7 3 0x7>;
		};
	};
	nct38xx@74 {
		compatible = "nuvoton,nct38xx";
		reg = <0x74>;
		tcpc_port1: nct38xx-tcpc {
			compatible = "cros,nct38xx-emul",
				"nuvoton,nct38xx-tcpc";
			rst-gpios = <&gpio7 3 0x7>;
		};
	};
};
